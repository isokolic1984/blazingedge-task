Tasks

1. PUT route /user/:id for updating the user by its id
- accepts firstName, lastName, bio
- bonus: validate url params using joi
- bonus: return the user in the response after updating
- bonus: write an SQL query instead of using the provided helper functions (leave both solutions in the code)

2. GET route /user/:id for getting the user by its id
- bonus: validate url params using joi
- bonus: write an SQL query instead of using the provided helper functions (leave both solutions in the code)

3. BONUS TASK
- candidate table in the database
- make a migration for a new table
- should have first name, last name and date of taking this test as columns
- POST route /candidate for recording a new candidate in the table specified above

4. BONUS TASK
- use JWT generated by /auth to authenticate all the routes above
- create middleware to handle it
- send the JWT any way you like

5. BONUS TASK
- create routes like in 1. and 2. but without /:id
- they should apply to the authenticated user by using the user id from the decoded JWT


Notes

All POST and PUT routes should use JSON body for data.
Be mindful of error handling.
Treat repo/base.js as a blackbox.
